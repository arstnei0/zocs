---
import { getCollection, getEntry } from "astro:content"
import LeftSideBar from "~/components/left/LeftSideBar.astro"
import RightSideBar from "~/components/right/RightSideBar.astro"
import Layout from "~/layouts/Layout.astro"
import { getDocsUrl } from "~/lib/url"

export async function getStaticPaths() {
	return (await getCollection("docs")).map((page) => ({
		params: {
			path: page.slug,
		},
	}))
}

const { path } = Astro.params

const page = await getEntry("docs", `${path}.mdx`)
const pageContent = await page.render()
---

<Layout title={page.data.title}>
	<main class="layout">
		<div id="grid-left" class="grid-sidebar">
			<LeftSideBar currentPage={getDocsUrl(page.slug)} />
		</div>
		<article class="grid-main">
			<h1>{page.data.title}</h1>
			<pageContent.Content />
		</article>
		<div id="grid-right" class="grid-sidebar">
			<RightSideBar headings={pageContent.headings} />
		</div>
	</main>
</Layout>

<style>
	main {
		display: flex;
		margin-top: 0;
	}

	.layout {
		display: grid;
		grid-auto-flow: column;
		grid-template-columns:
			minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
			minmax(var(--gutter), 1fr);
		overflow-x: hidden;
	}

	.grid-sidebar {
		height: 100vh;
		position: sticky;
		top: 1em;
		padding: 0;
	}

	#grid-left {
		position: fixed;
		background-color: var(--theme-bg);
		z-index: 10;
		display: none;
	}

	#grid-main {
		padding: var(--doc-padding) var(--gutter);
		grid-column: 2;
		display: flex;
		flex-direction: column;
		height: 100%;
	}

	#grid-right {
		display: none;
	}

	@media (min-width: 50em) {
		.layout {
			overflow: initial;
			grid-template-columns: 20rem minmax(0, var(--max-width));
			gap: 1em;
		}

		#grid-left {
			display: flex;
			padding-left: 2rem;
			position: sticky;
			grid-column: 1;
		}
	}

	@media (min-width: 72em) {
		.layout {
			grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
			padding-left: 0;
			padding-right: 0;
			margin: 0 auto;
		}

		#grid-right {
			grid-column: 3;
			display: flex;
		}
	}
</style>
