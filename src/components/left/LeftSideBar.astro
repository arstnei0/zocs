---
import { sidebar } from "~/sidebar"

export interface Props {
	currentPage: string
}

const { currentPage } = Astro.props as Props
---

<nav aria-labelledby="grid-left">
	<ul class="nav-groups">
		{
			Object.entries(sidebar).map(([header, children]) => (
				<li>
					<div class="nav-group">
						<h4>{header}</h4>
						<ul>
							{children.map((child) => {
								return (
									<li class="nav-link">
										<a
											href={child.url}
											aria-current={
												currentPage === child.url
													? "page"
													: false
											}
										>
											{child.title}
										</a>
									</li>
								)
							})}
						</ul>
					</div>
				</li>
			))
		}
	</ul>
</nav>

<script is:inline>
	window.addEventListener("DOMContentLoaded", () => {
		var target = document.querySelector('[aria-current="page"]')
		if (target && target.offsetTop > window.innerHeight - 100) {
			document.querySelector(".nav-groups").scrollTop = target.offsetTop
		}
	})
</script>

<style>
	nav {
		width: 100%;
		margin-right: 1rem;
	}

	.nav-groups {
		height: 100%;
		padding: 2rem 0;
		overflow-x: visible;
		overflow-y: auto;
		max-height: 100vh;
	}

	.nav-groups > li + li {
		margin-top: 2rem;
	}

	.nav-groups > :last-child {
		padding-bottom: 2rem;
		margin-bottom: var(--theme-navbar-height);
	}

	.nav-group-title {
		font-size: 1rem;
		font-weight: 700;
		padding: 0.1rem 1rem;
		text-transform: uppercase;
		margin-bottom: 0.5rem;
	}

	.nav-link a {
		font-size: 1rem;
		margin: 1px;
		padding: 0.3rem 1rem;
		font: inherit;
		color: inherit;
		text-decoration: none;
		display: block;
		border-radius: 0.3em;
	}

	.nav-link a[aria-current="page"] {
		background-color: var(--t-bg);
		font-weight: 600;
	}

	.nav-link a:hover,
	.nav-link a:focus {
		text-decoration: none;
		transition: background-color 0.3s ease;
		background-color: var(--t-hover);
	}

	@media (min-width: 50em) {
		.nav-groups {
			padding: 0;
		}
	}
</style>
